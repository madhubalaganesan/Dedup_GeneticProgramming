/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package DeDuplication;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.*;
/**
 *
 * @author dell
 */
public class upload extends javax.swing.JFrame {

    /**
     * Creates new form upload
     */
    public upload() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        browse = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        upload = new javax.swing.JButton();
        path = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        browse.setText("browse");
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });

        jLabel1.setText("deduplication using genetic programming");

        upload.setText("upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        path.setText("press browse button to choose");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addComponent(path, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(browse)
                .addGap(22, 22, 22))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(upload)
                .addGap(157, 157, 157))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse))
                .addGap(36, 36, 36)
                .addComponent(upload)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    JFileChooser fc=new JFileChooser("C:/project/input");
    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Document formats","docx", "doc", "pdf","txt","html");
    fc.setFileFilter(filter);
    int returnVal = fc.showOpenDialog(null);
    if(returnVal == JFileChooser.APPROVE_OPTION) {
     path.setText(fc.getSelectedFile().toString());
    }
    
    
    }//GEN-LAST:event_browseActionPerformed

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
    try{
    if(new File(path.getText()).exists()==false)
    {
    JOptionPane.showMessageDialog(rootPane, "File not found. please try again");
    return;
    }
    File originalfile=new File(path.getText());
    File inputfolder=new File("C:/project/storage");
    String ky=cv.convert(new File(path.getText()),"C:/project/temp/key.txt");
    File inputfile=new File(ky);
    int flag=0;
    
    File fl[]=inputfolder.listFiles();
    for(int i=0;i<fl.length;i++)
    {       //System.out.println("i="+i);
        
        String cfp=cv.convert(fl[i],"C:/project/temp/cur.txt");
        //System.out.println("processed "+cfp);
        Thread.sleep(1000);
        int cr=0;
        if(seq.compare(inputfile.getAbsolutePath(), cfp) >  80  )
                {  
                //JOptionPane.showMessageDialog(rootPane, " matching file found:"+fl[i].getName());
                //op=0 f-or yes op=1 for no
                
                    int op2 = JOptionPane.showConfirmDialog(rootPane,  "similiar document exists : " +fl[i].getName()+" add as a new file or cancel ??","new file", JOptionPane.YES_NO_CANCEL_OPTION);
                    System.out.println(op2);
                    if(op2==0)
                    {
                        //File temp=new File(path.getText());
                        seq.copy(originalfile.getPath(),"C:/project/storage/copy of " +originalfile.getName());//destination);
                        
                        
                    }
                flag=1;
                break;
                }
            
    }
    if(flag==0)
    seq.copy(originalfile.getPath(), "C:/project/storage/"+originalfile.getName());
    JOptionPane.showMessageDialog(rootPane, "Done!!");
    }
    catch(Exception ex)
    {
    JOptionPane.showMessageDialog(rootPane, ex.toString());
    Logger.getLogger(upload.class.getName()).log(Level.SEVERE, null, ex);
    }// TODO add your handling code here:
        
    }//GEN-LAST:event_uploadActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new upload().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField path;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables
}
